package com.company.public_.appreservas.public_.utilizador.generated;

import com.company.public_.appreservas.public_.utilizador.Utilizador;
import com.company.public_.appreservas.public_.utilizador.UtilizadorImpl;
import com.company.public_.appreservas.public_.utilizador.UtilizadorManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.public_.appreservas.public_.utilizador.Utilizador} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUtilizadorManagerImpl 
extends AbstractManager<Utilizador> 
implements GeneratedUtilizadorManager {
    
    private final TableIdentifier<Utilizador> tableIdentifier;
    
    protected GeneratedUtilizadorManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("appReservas", "public", "utilizador");
    }
    
    @Override
    public Utilizador create() {
        return new UtilizadorImpl();
    }
    
    @Override
    public TableIdentifier<Utilizador> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Utilizador>> fields() {
        return UtilizadorManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Utilizador>> primaryKeyFields() {
        return Stream.of(
            Utilizador.UTILIZADORID
        );
    }
}