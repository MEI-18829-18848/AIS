package com.company.public_.appreservas.public_.sala.generated;

import com.company.public_.appreservas.public_.sala.Sala;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.BooleanField;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.util.Optional;
import java.util.OptionalInt;

/**
 * The generated base for the {@link
 * com.company.public_.appreservas.public_.sala.Sala}-interface representing
 * entities of the {@code sala}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedSala {
    
    /**
     * This Field corresponds to the {@link Sala} field that can be obtained
     * using the {@link Sala#getSalaid()} method.
     */
    IntField<Sala, Integer> SALAID = IntField.create(
        Identifier.SALAID,
        Sala::getSalaid,
        Sala::setSalaid,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link Sala} field that can be obtained
     * using the {@link Sala#getNome()} method.
     */
    StringField<Sala, String> NOME = StringField.create(
        Identifier.NOME,
        o -> OptionalUtil.unwrap(o.getNome()),
        Sala::setNome,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Sala} field that can be obtained
     * using the {@link Sala#getLocalização()} method.
     */
    StringField<Sala, String> LOCALIZAÇÃO = StringField.create(
        Identifier.LOCALIZAÇÃO,
        o -> OptionalUtil.unwrap(o.getLocalização()),
        Sala::setLocalização,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Sala} field that can be obtained
     * using the {@link Sala#getLuagresmarcados()} method.
     */
    BooleanField<Sala, Boolean> LUAGRESMARCADOS = BooleanField.create(
        Identifier.LUAGRESMARCADOS,
        Sala::getLuagresmarcados,
        Sala::setLuagresmarcados,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link Sala} field that can be obtained
     * using the {@link Sala#getLotacao()} method.
     */
    ComparableField<Sala, Integer, Integer> LOTACAO = ComparableField.create(
        Identifier.LOTACAO,
        o -> OptionalUtil.unwrap(o.getLotacao()),
        Sala::setLotacao,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the salaid of this Sala. The salaid field corresponds to the
     * database column appReservas.public.sala.salaid.
     * 
     * @return the salaid of this Sala
     */
    int getSalaid();
    
    /**
     * Returns the nome of this Sala. The nome field corresponds to the database
     * column appReservas.public.sala.nome.
     * 
     * @return the nome of this Sala
     */
    Optional<String> getNome();
    
    /**
     * Returns the localização of this Sala. The localização field corresponds
     * to the database column appReservas.public.sala.localização.
     * 
     * @return the localização of this Sala
     */
    Optional<String> getLocalização();
    
    /**
     * Returns the luagresmarcados of this Sala. The luagresmarcados field
     * corresponds to the database column
     * appReservas.public.sala.luagresmarcados.
     * 
     * @return the luagresmarcados of this Sala
     */
    boolean getLuagresmarcados();
    
    /**
     * Returns the lotacao of this Sala. The lotacao field corresponds to the
     * database column appReservas.public.sala.lotacao.
     * 
     * @return the lotacao of this Sala
     */
    OptionalInt getLotacao();
    
    /**
     * Sets the salaid of this Sala. The salaid field corresponds to the
     * database column appReservas.public.sala.salaid.
     * 
     * @param salaid to set of this Sala
     * @return       this Sala instance
     */
    Sala setSalaid(int salaid);
    
    /**
     * Sets the nome of this Sala. The nome field corresponds to the database
     * column appReservas.public.sala.nome.
     * 
     * @param nome to set of this Sala
     * @return     this Sala instance
     */
    Sala setNome(String nome);
    
    /**
     * Sets the localização of this Sala. The localização field corresponds to
     * the database column appReservas.public.sala.localização.
     * 
     * @param localização to set of this Sala
     * @return            this Sala instance
     */
    Sala setLocalização(String localização);
    
    /**
     * Sets the luagresmarcados of this Sala. The luagresmarcados field
     * corresponds to the database column
     * appReservas.public.sala.luagresmarcados.
     * 
     * @param luagresmarcados to set of this Sala
     * @return                this Sala instance
     */
    Sala setLuagresmarcados(boolean luagresmarcados);
    
    /**
     * Sets the lotacao of this Sala. The lotacao field corresponds to the
     * database column appReservas.public.sala.lotacao.
     * 
     * @param lotacao to set of this Sala
     * @return        this Sala instance
     */
    Sala setLotacao(Integer lotacao);
    
    enum Identifier implements ColumnIdentifier<Sala> {
        
        SALAID          ("salaid"),
        NOME            ("nome"),
        LOCALIZAÇÃO     ("localização"),
        LUAGRESMARCADOS ("luagresmarcados"),
        LOTACAO         ("lotacao");
        
        private final String columnId;
        private final TableIdentifier<Sala> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "appReservas";
        }
        
        @Override
        public String getSchemaId() {
            return "public";
        }
        
        @Override
        public String getTableId() {
            return "sala";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Sala> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}