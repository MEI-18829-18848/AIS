package com.company.public_.appreservas.public_.evento.generated;

import com.company.public_.appreservas.public_.evento.Evento;
import com.company.public_.appreservas.public_.evento.EventoImpl;
import com.company.public_.appreservas.public_.evento.EventoManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.public_.appreservas.public_.evento.Evento} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedEventoManagerImpl 
extends AbstractManager<Evento> 
implements GeneratedEventoManager {
    
    private final TableIdentifier<Evento> tableIdentifier;
    
    protected GeneratedEventoManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("appReservas", "public", "evento");
    }
    
    @Override
    public Evento create() {
        return new EventoImpl();
    }
    
    @Override
    public TableIdentifier<Evento> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Evento>> fields() {
        return EventoManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Evento>> primaryKeyFields() {
        return Stream.of(
            Evento.EVENTOID
        );
    }
}