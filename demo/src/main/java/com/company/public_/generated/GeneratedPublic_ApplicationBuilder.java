package com.company.public_.generated;

import com.company.public_.Public_Application;
import com.company.public_.Public_ApplicationBuilder;
import com.company.public_.Public_ApplicationImpl;
import com.company.public_.Public_InjectorProxy;
import com.company.public_.appreservas.public_.cliente.ClienteManagerImpl;
import com.company.public_.appreservas.public_.cliente.ClienteSqlAdapter;
import com.company.public_.appreservas.public_.evento.EventoManagerImpl;
import com.company.public_.appreservas.public_.evento.EventoSqlAdapter;
import com.company.public_.appreservas.public_.lugar.LugarManagerImpl;
import com.company.public_.appreservas.public_.lugar.LugarSqlAdapter;
import com.company.public_.appreservas.public_.organizador.OrganizadorManagerImpl;
import com.company.public_.appreservas.public_.organizador.OrganizadorSqlAdapter;
import com.company.public_.appreservas.public_.reserva.ReservaManagerImpl;
import com.company.public_.appreservas.public_.reserva.ReservaSqlAdapter;
import com.company.public_.appreservas.public_.reservalugar.ReservalugarManagerImpl;
import com.company.public_.appreservas.public_.reservalugar.ReservalugarSqlAdapter;
import com.company.public_.appreservas.public_.sala.SalaManagerImpl;
import com.company.public_.appreservas.public_.sala.SalaSqlAdapter;
import com.company.public_.appreservas.public_.sessao.SessaoManagerImpl;
import com.company.public_.appreservas.public_.sessao.SessaoSqlAdapter;
import com.company.public_.appreservas.public_.utilizador.UtilizadorManagerImpl;
import com.company.public_.appreservas.public_.utilizador.UtilizadorSqlAdapter;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.Injector;
import com.speedment.runtime.application.AbstractApplicationBuilder;
import com.speedment.runtime.connector.postgres.PostgresBundle;

/**
 * A generated base {@link
 * com.speedment.runtime.application.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named public.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPublic_ApplicationBuilder extends AbstractApplicationBuilder<Public_Application, Public_ApplicationBuilder> {
    
    protected GeneratedPublic_ApplicationBuilder() {
        super(Public_ApplicationImpl.class, GeneratedPublic_Metadata.class);
        withManager(ClienteManagerImpl.class);
        withManager(EventoManagerImpl.class);
        withManager(LugarManagerImpl.class);
        withManager(OrganizadorManagerImpl.class);
        withManager(ReservaManagerImpl.class);
        withManager(ReservalugarManagerImpl.class);
        withManager(SalaManagerImpl.class);
        withManager(SessaoManagerImpl.class);
        withManager(UtilizadorManagerImpl.class);
        withComponent(ClienteSqlAdapter.class);
        withComponent(EventoSqlAdapter.class);
        withComponent(LugarSqlAdapter.class);
        withComponent(OrganizadorSqlAdapter.class);
        withComponent(ReservaSqlAdapter.class);
        withComponent(ReservalugarSqlAdapter.class);
        withComponent(SalaSqlAdapter.class);
        withComponent(SessaoSqlAdapter.class);
        withComponent(UtilizadorSqlAdapter.class);
        withBundle(PostgresBundle.class);
        withInjectorProxy(new Public_InjectorProxy());
    }
    
    @Override
    public Public_Application build(Injector injector) {
        return injector.getOrThrow(Public_Application.class);
    }
}